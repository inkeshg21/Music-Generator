'use strict';

const ruleLevels = require('./rule-levels');

const rules = {
  'array-callback-return': ruleLevels.error,
  'block-scoped-var': ruleLevels.error,
  'class-methods-use-this': ruleLevels.error,
  'consistent-return': ruleLevels.error,
  curly: ruleLevels.error,
  'default-case': ruleLevels.error,
  'dot-notation': ruleLevels.error,
  eqeqeq: ruleLevels.error,
  'guard-for-in': ruleLevels.error,
  'no-alert': ruleLevels.error,
  'no-caller': ruleLevels.error,
  'no-div-regex': ruleLevels.error,
  'no-else-return': ruleLevels.error,
  'no-empty-function': ruleLevels.error,
  'no-empty-pattern': ruleLevels.error,
  'no-eq-null': ruleLevels.error,
  'no-eval': ruleLevels.error,
  'no-extend-native': ruleLevels.error,
  'no-extra-bind': ruleLevels.error,
  'no-extra-label': ruleLevels.error,
  'no-floating-decimal': ruleLevels.error,
  'no-implicit-coercion': ruleLevels.error,
  'no-implicit-globals': ruleLevels.error,
  'no-implied-eval': ruleLevels.error,
  'no-invalid-this': ruleLevels.error,
  'no-iterator': ruleLevels.error,
  'no-labels': ruleLevels.error,
  'no-lone-blocks': ruleLevels.error,
  'no-loop-func': ruleLevels.error,
  'no-magic-numbers': [
    ruleLevels.error,
    { ignoreArrayIndexes: true, ignore: [0, 1, -1] },
  ],
  'no-multi-spaces': ruleLevels.error,
  'no-multi-str': ruleLevels.error,
  'no-new': ruleLevels.error,
  'no-new-func': ruleLevels.error,
  'no-new-wrappers': ruleLevels.error,
  'no-octal-escape': ruleLevels.error,
  'no-param-reassign': ruleLevels.error,
  'no-proto': ruleLevels.error,
  'no-return-assign': ruleLevels.error,
  'no-return-await': ruleLevels.error,
  'no-script-url': ruleLevels.error,
  'no-self-compare': ruleLevels.error,
  'no-sequences': ruleLevels.error,
  'no-throw-literal': ruleLevels.error,
  'no-unmodified-loop-condition': ruleLevels.error,
  'no-unused-expressions': ruleLevels.error,
  'no-useless-call': ruleLevels.error,
  'no-useless-concat': ruleLevels.error,
  'no-useless-return': ruleLevels.error,
  'no-void': ruleLevels.error,
  'no-warning-comments': ruleLevels.error,
  'no-with': ruleLevels.error,
  'prefer-promise-reject-errors': ruleLevels.error,
  radix: ruleLevels.error,
  'require-await': ruleLevels.error,
  'vars-on-top': ruleLevels.error,
  'wrap-iife': ruleLevels.error,
  yoda: ruleLevels.error,
};

module.exports = rules;
